"""
Django settings for twfy_votes project.

Generated by 'django-admin startproject' using Django 4.2.15.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

import socket
from pathlib import Path

import environ

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

env = environ.Env(
    SECRET_KEY=(str, ""),
    DEBUG=(bool, False),
    ALLOWED_HOSTS=(list, []),
    HIDE_DEBUG_TOOLBAR=(bool, False),
    GOOGLE_ANALYTICS=(str, ""),
    REFRESH_TOKEN=(str, ""),
    TWFY_API_KEY=(str, ""),
    BUGS_EMAIL=(str, ""),
    EMAIL_HOST=(str, "localhost"),
    EMAIL_PORT=(int, 1025),
    DEFAULT_FROM_EMAIL=(str, "webmaster@localhost"),
)


environ.Env.read_env(BASE_DIR / ".env")

STATIC_URL = "static/"
STATIC_ROOT = BASE_DIR / ".static"

SECRET_KEY = env("SECRET_KEY")
DEBUG = env("DEBUG")
REFRESH_TOKEN = env("REFRESH_TOKEN")
ALLOWED_HOSTS = env("ALLOWED_HOSTS")
CACHE_FILE = env("CACHE_FILE")
HIDE_DEBUG_TOOLBAR = env("HIDE_DEBUG_TOOLBAR")
GOOGLE_ANALYTICS = env("GOOGLE_ANALYTICS")
TWFY_API_KEY = env("TWFY_API_KEY")

if env("BUGS_EMAIL"):
    SERVER_EMAIL = env("BUGS_EMAIL")
    ADMINS = ("mySociety bugs", env("BUGS_EMAIL"))
    EMAIL_HOST = env("EMAIL_HOST")
    EMAIL_PORT = env("EMAIL_PORT")
    DEFAULT_FROM_EMAIL = env("DEFAULT_FROM_EMAIL")

# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "debug_toolbar",
    "compressor",
    "votes",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "debug_toolbar.middleware.DebugToolbarMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

if DEBUG and HIDE_DEBUG_TOOLBAR is False:  # pragma: no cover
    hostname, _, ips = socket.gethostbyname_ex(socket.gethostname())
    INTERNAL_IPS = [ip[:-1] + "1" for ip in ips] + ["127.0.0.1", "10.0.2.2"]
    CSRF_TRUSTED_ORIGINS = ["https://*.preview.app.github.dev"]
else:
    CSRF_TRUSTED_ORIGINS = ["https://votes.theyworkforyou.com"]

ROOT_URLCONF = "twfy_votes.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
                "votes.context_processors.extra_context",
            ],
            "builtins": [
                "votes.templatetags.hub_filters",
            ],
        },
    },
]

WSGI_APPLICATION = "twfy_votes.wsgi.application"


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {"default": env.db()}

STATICFILES_FINDERS = (
    "django.contrib.staticfiles.finders.FileSystemFinder",
    "django.contrib.staticfiles.finders.AppDirectoriesFinder",
    "compressor.finders.CompressorFinder",
)

BUILD_DIR = BASE_DIR / "build"
if BUILD_DIR.exists() is False:
    BUILD_DIR.mkdir()

STATICFILES_DIRS = [
    BASE_DIR / "votes" / "static",
    BASE_DIR / "build",
    ("bootstrap", BASE_DIR / "vendor" / "bootstrap" / "scss"),
    ("bootstrap", BASE_DIR / "vendor" / "bootstrap" / "js"),
]

COMPRESS_PRECOMPILERS = (("text/x-scss", "django_libsass.SassCompiler"),)
COMPRESS_CSS_HASHING_METHOD = "content"


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = "en-uk"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/


# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"
